#! /bin/python3.8

import os
import subprocess
import sys
import re
from typing import Dict

def main():
    """ input1: access_log
        input2: file to be verified
    """
    if len(sys.argv) != 3:
        print(f"Wrong number of arguments given to verify script.")
        print("Usage: $ verify access_log mapreduce_ouput_file ")
        return 0
    
    logpath = sys.argv[1] # access log path
    verifytargetpath = sys.argv[2] # target file to verify
    # verifytargetpath = "MRcorrectoutput"
    correctoutputpath = "MRcorrectoutput"
    IPREGEX = "^(?:\\d{1,3}[.]){3}\\d{1,3}"
    DATEREGEX = "\\d{2}/.*:\\d{2}\\s-"

    # skip file creation if exists already
    if not os.path.isfile(correctoutputpath):
        print("building access_log dictionary")
        logdict = {}
        with open(logpath, "r") as logfile:
            for line in logfile.readlines():
                ip = re.search(IPREGEX, line)
                date = re.search(DATEREGEX, line)
                logdict[ip.group()] = date.group()[:-1]

        print(f"Mrcorrectoutput length: {len(logdict.keys())}")
        # create output file that is the correct output
        with open(correctoutputpath, "w") as coutfile:
            for ip, date in logdict.items():
                coutfile.write(f"{ip}\t{date[:-1]}\n")

    proc = subprocess.run(f"diff -s -w {correctoutputpath} {verifytargetpath}", capture_output=True, shell=True)

    if  proc.returncode == 0: # if diff succeeded
        print(f"diff says: {proc.stdout.decode()}")
        print("Your MapReduce created the correct output! :)")
    else:
        print(f"diff says: {proc.stdout.decode()}")
        print("Your MapReduce did not create the correct output. :(")


if __name__ == "__main__":
    main()